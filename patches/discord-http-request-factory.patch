diff --git a/src/Utils.php b/src/Utils.php
index 1a5340e..73e8644 100644
--- a/src/Utils.php
+++ b/src/Utils.php
@@ -87,70 +87,26 @@ class DiscordUtils {
 			$stripped = $emoji . ' ' . $stripped;
 		}
 
-		DeferredUpdates::addCallableUpdate( function() use ( $stripped, $urls, $wgDiscordUseFileGetContents ) {
-			$user_agent = 'mw-discord/1.0 (github.com/jaydenkieran)';
 			$json_data = [
 				'content' => "$stripped",
 				'allowed_mentions' => [
                 'parse' => []
             ]
         ];
-			$json = json_encode($json_data);
-
-			if ( $wgDiscordUseFileGetContents ) {
-				// They want to use file_get_contents
-				foreach ($urls as &$value) {
-					$contextOpts = [
-						'http' => [
-							'header' => 'Content-Type: application/x-www-form-urlencoded',
-							'method' => 'POST', // Send as a POST request
-							'user_agent' => $user_agent, // Add a unique user agent
-							'content' => $json, // Send the JSON in the POST request
-							'ignore_errors' => true // If the call fails, let's not do anything with it
-						]
-					];
 
-					$context = stream_context_create( $contextOpts );
-					$result = file_get_contents( $value, false, $context );
+        $factory = MediaWikiServices::getInstance()->getHttpRequestFactory();
+
+        foreach ($urls as &$hook) {
+            $request = $factory->create($hook, [
+                'method' => 'POST',
+                'postData' => json_encode($json_data),
+            ], __METHOD__);
+
+            $request->setHeader('Content-Type', 'application/json');
+
+            // we don't care about if this succeeds, so no callback here
+            $request->execute();
 			}
-			} else {
-				// By default, we use cURL
-				// Set up cURL multi handlers
-				$c_handlers = [];
-				$result = [];
-				$mh = curl_multi_init();
-
-				foreach ($urls as &$value) {
-					$c_handlers[$value] = curl_init( $value );
-					curl_setopt( $c_handlers[$value], CURLOPT_POST, 1 ); // Send as a POST request
-					curl_setopt( $c_handlers[$value], CURLOPT_POSTFIELDS, $json ); // Send the JSON in the POST request
-					curl_setopt( $c_handlers[$value], CURLOPT_FOLLOWLOCATION, 1 );
-					curl_setopt( $c_handlers[$value], CURLOPT_HEADER, 0 );
-					curl_setopt( $c_handlers[$value], CURLOPT_RETURNTRANSFER, 1 );
-					curl_setopt( $c_handlers[$value], CURLOPT_CONNECTTIMEOUT, 10 ); // Add a timeout for connecting to the site
-					curl_setopt( $c_handlers[$value], CURLOPT_TIMEOUT, 10 ); // Do not allow cURL to run for a long time
-					curl_setopt( $c_handlers[$value], CURLOPT_USERAGENT, $user_agent ); // Add a unique user agent
-					curl_setopt( $c_handlers[$value], CURLOPT_HTTPHEADER, array(
-						'Content-Type: application/json'
-					));
-					curl_multi_add_handle( $mh, $c_handlers[$value] );
-				}
-
-				$running = null;
-				do {
-					curl_multi_exec($mh, $running);
-				} while ($running);
-
-				// Remove all handlers and then close the multi handler
-				foreach($c_handlers as $k => $ch) {
-					$result[$k] = curl_multi_getcontent($ch);
-					wfDebugLog( 'discord', 'Result of cURL was: ' . $result[$k] );
-					curl_multi_remove_handle($mh, $ch);
-				}
-
-				curl_multi_close($mh);
-			}
-		} );
 
 		return true;
     }
